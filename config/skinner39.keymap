#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include <dt-bindings/zmk/pointing.h>
#include "keycode_japanese.h"

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <150>;
};

/ {

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
  &lt 5 ESCAPE        &kp Q         &kp E         &kp U         &kp P                              &kp D  &kp T  &kp R  &kp W  &mkp MB1
  &mt LEFT_SHIFT TAB  &kp O         &kp A         &kp I         &kp F                              &kp H  &kp Y  &kp K  &kp S  &mt LEFT_SHIFT B
  &mt LCTRL PERIOD    &kp X         &kp C         &kp V         &kp L                              &kp N  &kp M  &kp G  &kp J  &mt RCTRL Z
  &kp LEFT_SHIFT &kt LEFT_SHIFT &kp LEFT_WIN  &mo 6 &mo 4  &mo 5                            &mo 6  &mo 2                       &kp RIGHT_ALT
            >;
        };

        number_layer {
            bindings = <
  &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5                  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans                        &trans        &trans        &trans        &trans        &trans
  &trans          &trans          &trans        &trans           &trans                        &trans        &trans        &trans        &trans        &trans
  &trans          &trans          &trans        &trans           &trans        &trans  &trans  &trans                                                  &trans
            >;
        };

        symbol_layer {
            bindings = <
  &kp RS(JP_SLASH)  &kp AT_SIGN    &kp HASH   &kp DOLLAR     &kp PERCENT                  &kp CARET       &kp LS(SEMI)  &kp ASTERISK       &kp SLASH          &mkp MB2
  &kp COMMA      &kp JP_SEMI    &kp JP_AT     &kp RS(MINUS)  &kp MINUS                    &kp LS(SLASH)       &kp EQUAL     &kp DOUBLE_QUOTES  &kp LS(0x87)  &kp LS(0x1e)
  &kp PERIOD     &kp JP_COLON  &kp UNDER  &kp UNDER      &trans                       &kp UNDERSCORE  &kp PLUS      &trans             &trans             &kp BACKSLASH
  &trans         &trans                    &trans     &trans         &mo 3        &trans  &trans  &trans                                                              &trans
            >;
        };

        function_layer {
            bindings = <
  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                            &kp F6             &kp F7  &kp F8  &kp F9  &kp F10
  &kp F11  &kp F12  &kp F7   &kp F8   &trans                            &trans             &trans  &trans  &trans  &trans
  &kp F9   &kp F10  &kp F11  &kp F12  &kp LC(RG(LEFT))                  &kp LG(RC(RIGHT))  &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
  &trans   &trans   &trans   &trans   &trans            &trans  &trans  &trans                                     &bt BT_CLR
            >;
        };

        mouse_layer {
            bindings = <
  &kp N1          &kp N2            &kp N3                &kp N4     &kp N5                     &kp N6         &kp N7     &kp N8                 &kp N9             &kp N0
  &kp JP_LT  &kp JP_LBKT  &kp LS(0x25)  &kp SPACE  &kp MINUS                  &kp BACKSPACE  &kp ENTER  &kp JP_RPAR  &kp JP_RBKT  &kp JP_RT
  &kp END         &kp PAGE_DOWN     &kp DOWN              &kp LEFT   &trans                     &kp DELETE     &kp RIGHT  &kp UP_ARROW           &kp PAGE_UP        &kp HOME
  &trans          &trans            &trans                &trans     &trans     &trans  &trans  &kp GRAVE                                                           &trans
            >;
        };

        scroll_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &mkp MB3
  &kp C_SLEEP  &trans  &trans  &trans  &trans                  &trans  &kp LC(RG(LEFT))   &kp LS(LG(S))    &kp LG(RC(RIGHT))  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            bindings = <
  &trans  &trans  &kp LG(UP)  &trans  &bootloader                  &trans  &trans  &kp LG(UP)  &trans  &trans
  &trans  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(RIGHT)  &trans                       &trans  &kp LG(LEFT)  &kp LG(N2)  &kp LG(RIGHT)  &trans
  &trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        customizable_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};




